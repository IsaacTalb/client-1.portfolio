name: Laravel CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, bcmath, pdo_mysql, intl, gd
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Install MySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo service mysql start

      - name: Set up MySQL for testing
        run: |
          mysql -u root -e "CREATE DATABASE IF NOT EXISTS test_database;"
          mysql -u root -e "CREATE USER 'test_user'@'localhost' IDENTIFIED BY 'password';"
          mysql -u root -e "GRANT ALL PRIVILEGES ON test_database.* TO 'test_user'@'localhost';"
          mysql -u root -e "FLUSH PRIVILEGES;"

      - name: Set up .env for testing
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=test_database" >> .env
          echo "DB_USERNAME=test_user" >> .env
          echo "DB_PASSWORD=password" >> .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --env=testing --force

      - name: Run tests
        run: php artisan test

  deploy:
    needs: [laravel-tests]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PATH: ${{ secrets.VPS_PATH }}
        run: |
          ssh $VPS_USER@$VPS_HOST << 'EOF'
          cd $VPS_PATH
          git pull origin main
          composer install --prefer-dist --no-dev
          php artisan migrate --force
          php artisan optimize
          EOF
