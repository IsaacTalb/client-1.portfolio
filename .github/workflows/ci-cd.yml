name: Laravel CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        run: |
          git clone https://github.com/${{ github.repository }} .
          git checkout ${{ github.ref }}

      # Step 2: Install PHP
      - name: Install PHP
        run: |
          sudo apt update
          sudo apt install -y php8.2-cli php8.2-mbstring php8.2-bcmath php8.2-intl php8.2-gd php8.2-mysql git
          php -v

      # Step 3: Install Node.js and NPM (if needed)
      - name: Install Node.js and NPM
        run: |
          curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          sudo apt install -y nodejs
          node -v
          npm -v

      # Step 4: Install Composer dependencies
      - name: Install Composer dependencies
        run: |
          curl -sS https://getcomposer.org/installer | php
          sudo mv composer.phar /usr/local/bin/composer
          composer install --prefer-dist --no-dev --optimize-autoloader

      # Step 5: Deploy to VPS
      - name: Deploy to VPS
        env:
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_PATH: ${{ secrets.VPS_PATH }}
          NGINX_SERVICE: nginx
          PHP_SERVICE: php8.3-fpm # Adjust based on your PHP-FPM version
        run: |
          ssh $VPS_USER@$VPS_HOST << 'EOF'
          set -e # Stop execution on errors

          # Navigate to project path
          cd $VPS_PATH

          # Pull latest changes
          echo "Pulling latest changes..."
          git pull origin main

          # Install/update Composer dependencies
          echo "Installing composer dependencies..."
          composer install --prefer-dist --no-dev --optimize-autoloader

          # Run database migrations
          echo "Running migrations..."
          php artisan migrate --force

          # Clear and cache configurations
          echo "Clearing and caching configurations..."
          php artisan config:clear
          php artisan config:cache
          php artisan route:cache
          php artisan view:clear
          php artisan view:cache

          # Build assets
          echo "Building assets..."
          npm ci
          npm run build

          # Adjust permissions
          echo "Adjusting permissions..."
          chown -R www-data:www-data storage bootstrap/cache
          chmod -R 775 storage bootstrap/cache

          # Restart services
          echo "Restarting services..."
          sudo systemctl restart $NGINX_SERVICE
          sudo systemctl restart $PHP_SERVICE

          echo "Deployment complete!"
          EOF
